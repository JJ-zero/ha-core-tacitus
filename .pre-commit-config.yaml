repos:
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.0.285
    hooks:
      - id: ruff
        args:
          - --fix
  - repo: https://github.com/psf/black-pre-commit-mirror
    rev: 23.9.0
    hooks:
      - id: black
        args:
          - --quiet
        files: ^((homeassistant|pylint|script|tests)/.+)?[^/]+\.py$
  - repo: https://github.com/codespell-project/codespell
    rev: v2.2.2
    hooks:
      - id: codespell
        args:
          - --ignore-words-list=additionals,alle,alot,bund,currenty,datas,farenheit,falsy,fo,haa,hass,iif,incomfort,ines,ist,nam,nd,pres,pullrequests,resset,rime,ser,serie,te,technik,ue,unsecure,withing,zar
          - --skip="./.*,*.csv,*.json,*.ambr"
          - --quiet-level=2
        exclude_types: [csv, json]
        exclude: ^tests/fixtures/|homeassistant/generated/
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: check-executables-have-shebangs
        stages: [manual]
      - id: check-json
        exclude: (.vscode|.devcontainer)
      - id: no-commit-to-branch
        args:
          - --branch=dev
          - --branch=master
          - --branch=rc
  - repo: https://github.com/adrienverge/yamllint.git
    rev: v1.32.0
    hooks:
      - id: yamllint
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v2.7.1
    hooks:
      - id: prettier
  - repo: https://github.com/cdce8p/python-typing-update
    rev: v0.6.0
    hooks:
      # Run `python-typing-update` hook manually from time to time
      # to update python typing syntax.
      # Will require manual work, before submitting changes!
      # pre-commit run --hook-stage manual python-typing-update --all-files
      - id: python-typing-update
        stages: [manual]
        args:
          - --py311-plus
          - --force
          - --keep-updates
        files: ^(homeassistant|tests|script)/.+\.py$
  - repo: local
    hooks:
      # Run mypy through our wrapper script in order to get the possible
      # pyenv and/or virtualenv activated; it may not have been e.g. if
      # committing from a GUI tool that was not launched from an activated
      # shell.
      - id: mypy
        name: mypy
        entry: script/run-in-env.sh mypy
        language: script
        types: [python]
        require_serial: true
        files: ^(homeassistant|pylint)/.+\.py$
      # This is so anoying! I need to work on this code! Why is this so badly configured? It just refuses to work
      # locally in any shape or form so I just disable it until there is time to request inclusion into official
      # HA repo if ever. I'm all for nice and readalble code, but pylint never works. It's the WORST linter you can use.
      # It never workd correctly in local enviroment, has useless error messages and usualy just makes code look worst.
      # - id: pylint
      #   name: pylint
      #   entry: script/run-in-env.sh pylint -j 0 # --ignore-missing-annotations=y # Pylint errored on this.
      #   language: script
      #   types: [python]
      #   files: ^homeassistant/.+\.py$
      - id: gen_requirements_all
        name: gen_requirements_all
        entry: script/run-in-env.sh python3 -m script.gen_requirements_all
        pass_filenames: false
        language: script
        types: [text]
        files: ^(homeassistant/.+/manifest\.json|homeassistant/brands/.+\.json|pyproject\.toml|\.pre-commit-config\.yaml|script/gen_requirements_all\.py)$
      - id: hassfest
        name: hassfest
        entry: script/run-in-env.sh python3 -m script.hassfest
        pass_filenames: false
        language: script
        types: [text]
        files: ^(homeassistant/.+/(manifest|strings)\.json|homeassistant/brands/.*\.json|\.coveragerc|homeassistant/.+/services\.yaml|script/hassfest/(?!metadata|mypy_config).+\.py)$
      - id: hassfest-metadata
        name: hassfest-metadata
        entry: script/run-in-env.sh python3 -m script.hassfest -p metadata
        pass_filenames: false
        language: script
        types: [text]
        files: ^(script/hassfest/metadata\.py|homeassistant/const\.py$|pyproject\.toml)$
      - id: hassfest-mypy-config
        name: hassfest-mypy-config
        entry: script/run-in-env.sh python3 -m script.hassfest -p mypy_config
        pass_filenames: false
        language: script
        types: [text]
        files: ^(script/hassfest/mypy_config\.py|\.strict-typing|mypy\.ini)$
